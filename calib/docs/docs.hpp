/*! \mainpage
 *
 * \section via_sec Calibration Hardware Executable
 *
 * This project references the main <a href="https://starling.space/website/static/img/via_library_documentation/index.html">Via library</a> to build a hardware executable (.bin) that can be flashed to the STM32F373 controlling the module.
 *
 * \subsection modules_sec User Sections
 *
 * The files src/main.cpp, src/main_hardware_init.cpp, src/user_interrupts.c, and src/interrupt_link.cpp are used to perform hardware initialization and signal events to the library functions.
 *
 * The executable template essentially does two things: set up the runtime of the MCU peripherals to send signals and stream data to and from the module code, and call appropriate event handler methods from the module class.
 *
 * Due to the third party libraries used, the interrupt handler functions needed to be defined in C code. As such, a system of anonymous callback functions is used to link the module class methods to the interrupt handlers.
 *
 * The inclusion of <a href="https://starling.space/website/static/img/via_library_documentation/class_via_calib.html">"calib.hpp"</a> provides linkage to the module class and its methods. Once you get the gist of how the methods are called from the peripheral interrupts, you can reference specific implementation of the handler functions in that header file.
 *
 * \subsection synthesis_sec 3rd Party Libraries
 *
 * The rest of the code was generated by ST's CubeMX setup wizard. It uses the HAL abstraction layer which is built on top of CMSIS.
 *
 */

/*! \dir inc
 *
 * \brief ViaModule class and subclass definitions.
 *
 */
/*! \dir src
 *
 * \brief Global module class definitions and platform specific IO handling.
 *
 */
/*! \dir startup
 *
 * \brief Global class method definition.
 *
 */

/*! \dir docs
 *
 * \brief Project documentation.
 *
 */
